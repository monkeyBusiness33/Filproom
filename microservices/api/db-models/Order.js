module.exports = (sequelize, Sequelize) => {
  return sequelize.define("order", {
    ID:                      {type: Sequelize.BIGINT, allowNull: false, primaryKey: true, autoIncrement: true},
    foreignID:               {type: Sequelize.STRING(200),  allowNull: true},
    accountID:               {type: Sequelize.BIGINT,       allowNull: false},
    parentOrderID:           {type: Sequelize.BIGINT,       allowNull: true},
    siblingOrderID:           {type: Sequelize.BIGINT,       allowNull: true},
    userID:                  {type: Sequelize.BIGINT,       allowNull: true},
    typeID:                  {type: Sequelize.INTEGER,      allowNull: true},
    arrivalDate:             {type: Sequelize.DATE,         allowNull: true},
    reference1:              {type: Sequelize.STRING(200),  allowNull: true},
    statusID:                {type: Sequelize.BIGINT,       allowNull: true, defaultValue: 1},
    completedAt:             {type: Sequelize.DATE,         allowNull: true},
    consignorID:             {type: Sequelize.BIGINT,       allowNull: true},
    consigneeID:             {type: Sequelize.BIGINT,       allowNull: true},
    quantity:                {type: Sequelize.INTEGER,      allowNull: false, defaultValue: 0},
    weight:                  {type: Sequelize.DECIMAL(18,3),  allowNull: false, defaultValue: 0},
    volume:                  {type: Sequelize.DECIMAL(18,3),  allowNull: false, defaultValue: 0},
    tags:                    {type: Sequelize.STRING(1000),  allowNull: false, defaultValue: ''},
    receiptFilename:         {type: Sequelize.STRING(500),   allowNull: true},
    invoiceFilename:         {type: Sequelize.STRING(500),   allowNull: true},
    paymentMethod:           {type: Sequelize.STRING(500),   allowNull: true},
    saleChannelID :          {type: Sequelize.BIGINT,        allowNull: true},
    totalAmount:             {type: Sequelize.DECIMAL(10,2),  allowNull: false, defaultValue: 0},
    accessToken:             {type: Sequelize.STRING(50),   allowNull: true},
    personalShopperAccountID: {type: Sequelize.BIGINT,      allowNull: true},
    notes:                  {type: Sequelize.STRING(1000), allowNull: true},
    billingAddressID:       {type: Sequelize.BIGINT,      allowNull: true},
    basketStartedAt:        {type: Sequelize.DATE, allowNull: true},
    linkFirstSharedAt:      {type: Sequelize.DATE, allowNull: true},
    linkFirstOpenedAt:      {type: Sequelize.DATE, allowNull: true},
    fulfillmentStartedAt:   {type: Sequelize.DATE, allowNull: true},
    fulfillmentCompletedAt:  {type: Sequelize.DATE, allowNull: true},
  });
};